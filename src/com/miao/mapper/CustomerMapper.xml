<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.miao.mapper.CustomerMapper">

    <!--如果数据库字段名字和javaBean中属性名字不同，则可以采用resultMap的方式进行重新映射-->
    <resultMap id="customerMap" type="com.miao.domain.Customer">
        <id column="cust_id" property="cust_id"></id>
        <result column="cust_name" property="cust_name"></result>
        <result column="cust_phone" property="cust_phone"></result>
        <result column="cust_profession" property="cust_profession"></result>
        <result column="email" property="email"></result>
    </resultMap>

    <resultMap id="customerMap2" type="com.miao.domain.Customer">
        <id property="cust_id" column="cust_id"/>
        <result property="cust_name" column="cust_name"/>
        <result property="cust_profession" column="cust_profession"/>
        <result property="cust_phone" column="cust_phone"/>
        <result property="email" column="email"/>

        <collection property="orders" ofType="com.miao.domain.Order">
            <id property="order_id" column="order_id"/>
            <result property="order_name" column="order_name"/>
            <result property="order_num" column="order_num"/>
        </collection>
    </resultMap>

    <select id="queryCustomerByIdAndOrder" resultMap="customerMap2" parameterType="integer">
        SELECT * FROM customer c LEFT JOIN `order` o ON c.`cust_id`=o.`cust_id`
        WHERE c.`cust_id`=#{cust_id}

    </select>


    <!--根据cust_id查询客户-->
    <!--mybatis #{cust_id} == '?' -->
    <select id="queryCustomerById" parameterType="integer" resultType="com.miao.domain.Customer">
	  SELECT * FROM `customer` WHERE cust_id  = #{cust_id}
	</select>

    <!--测试 查询两个参数-->
    <select id="queryCustomerByIdAndName" resultType="com.miao.domain.Customer">
        select * from `customer` where cust_id=#{param1} and cust_name=#{param2}
    </select>

    <select id="queryCustomerAll" resultType="com.miao.domain.Customer">
        select * from customer
    </select>

    <!--模糊查询 SELECT * FROM customer WHERE cust_name LIKE '%李%'-->
    <!--${}不防止sql注入         select * from customer where cust_name like '%${value}%'-->
    <select id="queryCustomerLike" resultType="com.miao.domain.Customer" parameterType="string">

        select * from customer where cust_name like #{name}
    </select>

    <select id="queryCustomerCount" resultType="java.lang.Integer">
        select count(*) from `customer`
    </select>

    <!--<where>标签有两个作用，1.如果两个if标签里面的值都为空，则sql语句中where会被删掉，2.如果第一个if为空，第二个if有值，
     则会帮助我们删除第一个and-->
    <!--  <select id="dynamicQueryCustomerByNameAndPro1" resultType="com.miao.domain.Customer">
          select * from `customer`
          <where>
              <if test="name!=null and name!=''">
                  cust_name=#{name}
              </if>
              <if test="profession!=null and profession!=''">
                  and cust_profession=#{profession}
              </if>
          </where>

      </select>-->
    <!--choose标签只需要找到第一个符合条件的进行执行，找到第一个符合条件的即可-->
    <select id="dynamicQueryCustomerByNameAndPro" resultType="com.miao.domain.Customer">
        select * from `customer`
        <where>
            <choose>
                <when test="profession!=null and profession!=''">
                    and cust_profession=#{profession}
                </when>

                <when test="name!=null and name!=''">
                    cust_name=#{name}
                </when>

                <otherwise>1=1</otherwise>
            </choose>
        </where>

    </select>


    <!--插入一个客户 useGeneratedKeys="true" keyProperty="cust_id" keyColumn="cust_id"的效果同selectkey-->
    <!--接上，效果，即插入Customer后会把自增主键返回-->
    <insert id="insertCustomer" parameterType="com.miao.domain.Customer"
            useGeneratedKeys="true" keyProperty="cust_id" keyColumn="cust_id">

        /* 获取插入的最后一个id, order表示在执行insert操作之后执行selectkey里面的操作*/
        <!-- <selectKey keyColumn="cust_id" keyProperty="cust_id" resultType="Integer" order="AFTER">
             select last_insert_id();
         </selectKey>-->

        insert into `customer`(cust_name,cust_profession,cust_phone,email)
        values (#{cust_name},#{cust_profession},#{cust_phone},#{email})
    </insert>

    <!--更新操作 <set>标签用户更新操作中，可以帮助我们去掉最后一个多余的，-->
    <update id="updateCustomer" parameterType="com.miao.domain.Customer">
        update `customer`
        <set>
            <if test="cust_name!=null and cust_name!=''">
                cust_name=#{cust_name},
            </if>
            <if test="cust_profession!=null and cust_profession!=''">
                cust_profession=#{cust_profession},
            </if>
        </set>
        where cust_id=#{cust_id}
    </update>

    <!--删除操作-->
    <delete id="deleteCustomer" parameterType="com.miao.domain.Customer">
        delete from `customer` where cust_id=#{cust_id}
    </delete>


    <select id="queryCustomers" resultType="com.miao.domain.Customer" parameterType="Integer[]">

        <include refid="selectCus">
            <property name="lk" value="2"/>
        </include>
        where `cust_id` in
        <foreach collection="array" open="(" close=")" separator="," item="ids">
            #{ids}
        </foreach>
    </select>

    <sql id="selectCus">
        <choose>
            <when test="${lk}==2">
                select cust_name from `customer`
            </when>
            <otherwise>
                select * from `customer`
            </otherwise>
        </choose>

    </sql>
</mapper>
